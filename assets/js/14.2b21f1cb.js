(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{244:function(e,n,a){"use strict";a.r(n);var s=a(2),t=Object(s.a)({},function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[e._v("#")]),e._v(" 概念")]),e._v(" "),a("p",[e._v("Ribbon是负载均衡器，默认提供了多种负载均衡算法，例如轮询、随机等等。在Spring  Cloud中，一般将Ribbon和服务注册发现（如Eureka）结合使用，比如启用多个相同的Eureka  Client（一般在不同的服务器上），然后另外一个客户端来调用多个相同的client，是逐个调用，还是随机调用，还是根据自己配置好的策略来调用等。")]),e._v(" "),a("h2",{attrs:{id:"项目概况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目概况","aria-hidden":"true"}},[e._v("#")]),e._v(" 项目概况")]),e._v(" "),a("ul",[a("li",[e._v("新建一个Eureka Server，和之前的一致")]),e._v(" "),a("li",[e._v("新建两个Eureka Client，spring.application.name要相同，这样在注册到server的时候就是相同的两个了")]),e._v(" "),a("li",[e._v("新建一个调用层（如web），也是Eureka Client，来调用相同name的两个client")])]),e._v(" "),a("h2",{attrs:{id:"eureka-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eureka-server","aria-hidden":"true"}},[e._v("#")]),e._v(" Eureka Server")]),e._v(" "),a("p",[e._v("新建一个普通的Eureka Server，分别配置application.yml、pom.xml和添加注解@EnableEurekaServer")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\t\t<dependency>\n\t\t\t<groupId>org.springframework.cloud</groupId>\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\n\t\t</dependency>\nserver:\n  port: 9020\neureka:\n  client:\n    register-with-eureka: false\n    fetch-registry: false\n    service-url:\n      defaultZone: http://localhost:9020/eureka/\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[e._v("以上步骤完成后，直接启动即可，然后浏览器地址栏输入http://localhost:9020/eureka查看界面。")]),e._v(" "),a("h2",{attrs:{id:"eureka-client"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eureka-client","aria-hidden":"true"}},[e._v("#")]),e._v(" Eureka Client")]),e._v(" "),a("p",[e._v("新建两个相同的Eureka Client，只是端口不一致。\n添加的依赖至少要有：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.cloud</groupId>\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n\t\t</dependency>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("application.yml文件中配置除了端口号外，其他一致（特别是spring.application.name必须一样）：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server:\n  port: 9021\nspring:\n  application:\n    name: ribbon-client\neureka:\n  client:\n    service-url:\n      defaultZone: http://localhost:9020/eureka/\n  instance:\n    prefer-ip-address: true\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("在启动类中添加注解@EnableDiscoveryClient，声明这是一个Eureka  Client。注解也可以使用@EnableEurekaClient，不同的是@EnableDiscoveryClient同时还可以作为Zookeeper、Consul中发现注解，作用范围更广一些。")]),e._v(" "),a("p",[e._v("为了可以让后续的项目来调用，两个client都新建一个Controller，代码为：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('import org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class TestController {\n\n\t@GetMapping("/{id}")\n\tpublic String getMessage(@PathVariable Long id) {\n\t\treturn "the request1 id is " + id;\n\t}\n\t\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("p",[e._v("两个client不同的是需要将返回内容简单修改下，以便清除确认是谁返回的，比如讲上面的request1改成request2就是第二个controller中的返回内容了。")]),e._v(" "),a("p",[e._v("启动完成后查看server的web管理端，可以看到有ribbon-client了，地址端口为配置好的两个。")]),e._v(" "),a("h2",{attrs:{id:"web"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web","aria-hidden":"true"}},[e._v("#")]),e._v(" Web")]),e._v(" "),a("p",[e._v("Web项目也是一个Eureka Client，pom.xml引入和上面的一致。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.cloud</groupId>\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n\t\t</dependency>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("本篇要介绍ribbon，但是上面的引入并没有ribbon相关，这是因为eureka-client已经包含了ribbon，如果不是和eureka-client集成，需要添加以下依赖：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\t\t<dependency>\n\t\t\t<groupId>org.springframework.cloud</groupId>\n\t\t\t<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>\n\t\t</dependency>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("在项目入口类中，添加注解@EnableDiscoveryClient，同时添加Bean的引入")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\t@Bean\n    @LoadBalanced\n    RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("这里的@LoadBalanced注解可以为RestTemplate整合Ribbon时期具有负载均衡的能力。")]),e._v(" "),a("p",[e._v("application.yml文件和前述的大体一致：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server:\n  port: 9023\nspring:\n  application:\n    name: ribbon-web\neureka:\n  client:\n    service-url:\n      defaultZone: http://localhost:9020/eureka/\n  instance:\n    prefer-ip-address: true\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("接下来是核心的调用Controller，先上代码")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.cloud.client.ServiceInstance;\nimport org.springframework.cloud.client.loadbalancer.LoadBalancerClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestTemplate;\n\n@RestController\npublic class WebController {\n\n\t@Autowired private RestTemplate restTemplate;\n\t@Autowired private LoadBalancerClient loadBalancerClient;\n\n\t@GetMapping("/test")\n    public String test() {\n        String result = restTemplate.getForObject("http://ribbon-client/123",String.class);\n        System.out.println(result);\n        return result;\n    }\n\t\n\t@GetMapping("/test2")\n    public String test2() {\n        ServiceInstance serviceInstance = loadBalancerClient.choose("ribbon-client");\n        String result = serviceInstance.getServiceId() + ":" + serviceInstance.getHost() + ":" + serviceInstance.getPort();\n        System.out.println(result);\n        return result;\n    }\n\t\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br")])]),a("p",[e._v("其中，/test调用是测试调用client中的方法，可以多调用几次，分别查看网页端内容或者控制台打印的内容。/test2是用来展示如何使用LoadBalancerClient获取正在调用的服务信息，多调用几次，分别查看网页端微服务信息或者查看控制台打印。")]),e._v(" "),a("p",[e._v("两个测试地址分别为：http://localhost:9023/testhttp://localhost:9023/test2")]),e._v(" "),a("p",[e._v("会发现对两个client的调用时轮询的，逐个调用。")]),e._v(" "),a("h2",{attrs:{id:"修改策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改策略","aria-hidden":"true"}},[e._v("#")]),e._v(" 修改策略")]),e._v(" "),a("p",[e._v("可以查看com.netflix.loadbalancer包中的类，对应多种不同Rule，比如随机调用的RandomRule等，本篇将上述的web调用策略修改为随机调用。")]),e._v(" "),a("p",[e._v("查看application.yml文件，添加以下内容：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ribbon-client:\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("调用策略修改完成，测试两个地址，查看打印内容是否变成了随机。")]),e._v(" "),a("p",[e._v('上面的格式为"微服务名称.ribbon.策略对应完整路径类"，ribbon-client是我定义调用微服务的名称，com.netflix.loadbalancer.RandomRule是对应的完整策略类，之所以要写全称，也就是为了方便可以使用自定义的策略，这时只需要将路径类修改成自己定义的就行了。')])])},[],!1,null,null,null);n.default=t.exports}}]);